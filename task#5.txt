# ===============================
# 1. Class: Book 
# ===============================
class Book:
    def __init__(self, title, author, isbn, available=True):
        self.title = title
        self.author = author
        self.__isbn = isbn      # (Private Attribute)
        self.available = available


    def get_isbn(self):
        return self.__isbn


    def set_isbn(self, new_isbn):
        self.__isbn = new_isbn

  
    def display_info(self):
        status = "Available" if self.available else "Not Available"
        print(f"Title: {self.title}, Author: {self.author}, ISBN: {self.__isbn}, Status: {status}")


# ===============================
# 2. Class: Member 
# ===============================
class Member:
    def __init__(self, name, membership_id):
        self.name = name
        self.__membership_id = membership_id   # (Private)
        self.borrowed_books = []            

    # Getter → 
    def get_membership_id(self):
        return self.__membership_id

    # Setter → 
    def set_membership_id(self, new_id):
        self.__membership_id = new_id

    # 
    def borrow_book(self, book):
        if book.available:
            book.available = False
            self.borrowed_books.append(book)
            print(f"{self.name} borrowed '{book.title}'")
        else:
            print(f"Sorry, '{book.title}' is not available.")

    # 
    def return_book(self, book):
        if book in self.borrowed_books:
            book.available = True
            self.borrowed_books.remove(book)
            print(f"{self.name} returned '{book.title}'")
        else:
            print(f"{self.name} did not borrow '{book.title}'.")


# 3. Class: StaffMember (Member)
 ===============================
class StaffMember(Member):
    def __init__(self, name, membership_id, staff_id):
        super().__init__(name, membership_id)  #(Member)
        self.staff_id = staff_id

 
    def add_book(self, library, book):
        library.add_book(book)
        print(f"Staff {self.name} added '{book.title}' to the library.")


# ===============================
# 4. Class: Library 
# ===============================
class Library:
    def __init__(self, name):
        self.name = name
        self.books = []  


    def add_book(self, book):
        self.books.append(book)

 
    def display_books(self):
        print(f"\nBooks in {self.name}:")
        for book in self.books:
            book.display_info()


# ===============================
# 5.  (Main Program)
# ===============================


my_library = Library("Central Library")


book1 = Book("Python Basics", "John Smith", "ISBN001")
book2 = Book("Data Science 101", "Jane Doe", "ISBN002")
book3 = Book("Networking Fundamentals", "Ali Hassan", "ISBN003")


my_library.add_book(book1)
my_library.add_book(book2)
my_library.add_book(book3)


member1 = Member("Rana", "M001")
staff1 = StaffMember("Ahmed", "M002", "S100")


my_library.display_books()


member1.borrow_book(book1)


member1.borrow_book(book1)


member1.return_book(book1)


new_book = Book("Cyber Security", "Omar Ali", "ISBN004")
staff1.add_book(my_library, new_book)


my_library.display_books()
